/// <reference types="node" />
import * as child_process from "child_process";
import { IPhoneSimulatorNameGetter } from "./iphone-simulator-name-getter";
export declare class XCodeSimctlSimulator extends IPhoneSimulatorNameGetter implements ISimulator {
    private static DEVICE_IDENTIFIER_PREFIX;
    private deviceLogChildProcess;
    private isDeviceLogOperationStarted;
    defaultDeviceIdentifier: string;
    private simctl;
    constructor();
    getDevices(): Promise<IDevice[]>;
    getSdks(): Promise<ISdk[]>;
    run(applicationPath: string, applicationIdentifier: string, options: IOptions): Promise<string>;
    sendNotification(notification: string, deviceId: string): Promise<void>;
    getApplicationPath(deviceId: string, applicationIdentifier: string): Promise<string>;
    getInstalledApplications(deviceId: string): IApplication[];
    installApplication(deviceId: string, applicationPath: string): Promise<void>;
    uninstallApplication(deviceId: string, appIdentifier: string): Promise<void>;
    private static startingApps;
    private static stoppingApps;
    startApplication(deviceId: string, appIdentifier: string, options: IOptions): Promise<string>;
    stopApplication(deviceId: string, appIdentifier: string, bundleExecutable: string): Promise<void>;
    private getPid;
    getDeviceLogProcess(deviceId: string, predicate?: string): Promise<child_process.ChildProcess>;
    private getDeviceToRun;
    private isDeviceBooted;
    private getBootedDevice;
    private getBootedDevices;
    startSimulator(options: IOptions, device?: IDevice): Promise<void>;
    private haveBootedDevices;
    private isSimulatorAppRunning;
    private verifyDevice;
    private getDeviceFromIdentifier;
}
